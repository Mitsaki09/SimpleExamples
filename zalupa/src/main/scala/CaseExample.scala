object CaseExample extends App {

  val age: Int = 18

  // Мы можем матчить на конкретные значения, например - именно возраст 18
  age match {
    case 18 => // попадет сюда если возвраст 18
    case a: Any => // опадет в остальных случаях
  }

  // Мы можем матчить значения с условием, например вовзраст должен быть больше 0.
  // Все три варианта сработают одинаково
  age match {
    case _ if age > 0 => // 1. попадет сюда если возвраст больше 0
    case a if a > 0 => // 2. попадет сюда если возвраст больше 0
    case a: Int if a > 0 => //3. попадет сюда если возвраст больше 0

    case a: Int if a > 0 && a < 19 => // двойное условие, попадет сюда если переменная а больше 0 и меньше 19.
    // && - означает И. Склеивает два условия
    // || - означает ИЛИ. Позволяет провеять одно из двух условий,
    // например if (password == "admin" || password == "12345"). Сработает если пароль будет один из этих двух

    case _ => // опадет в остальных случаях
  }

  // мы можем сматчить тупо в переменную, без конкретного значения или условия.
  // в таком случае пишут новое название переменной и указывают тип
  age match {
    case ageInMatch: Int => // попадет всегда
  }

  // кстати, в case _ =>   тут _ просто сокращение, чтобы не писать имя.
  // это можно заменить на case a: Any => , т.е. что угодно
}
